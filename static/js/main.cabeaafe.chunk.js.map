{"version":3,"sources":["Nav.js","DogComponent.js","Homepage.js","AllDogs.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","to","DogComponent","props","state","dogs","this","dog","name","life_span","temperament","bred_for","weight","imperial","id","src","image","url","alt","Component","Home","getDog","e","dogName","dogInput","filter","toLowerCase","setState","oneDog","handleBreed","value","target","onClick","type","placeholder","onChange","length","AllDogs","renderSomeDogs","map","deleteDog","editDog","Form","createNewDog","preventDefault","newDog","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","returnedDogs","getAllDogs","formChange","weightFormChange","imageFormChange","handleEditChange","dogToEdit","weightEditChange","imageEditChange","updateDog","a","String","_id","response","newDogs","onSubmit","for","breed","App","data","Loading","exact","path","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cabeaafe.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Nav = () => {\n\n    return (\n        <div>\n            <ul className=\"link\">\n                <div>\n                <Link className=\"home\" to=\"/home\">Home</Link> \n                </div>\n                <div>\n                <Link className=\"alldogs\" to='/alldogs'>All Dogs</Link>\n                </div>\n            </ul>\n        </div>\n    )\n}\n\nexport default Nav\n","import React, { Component } from 'react';\n\nclass DogComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dogs: { ...props }\n        };\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h1>{this.props.dog.name}</h1>\n                </div>\n                <div>\n                    <header>SEARCH FOR YOUR FUTURE DOG</header>\n                    <h1>{this.props.dog[0].name}</h1>\n                    <p>Life Span {this.props.dog[0].life_span}</p>\n                    <div>\n                        Temperament\n\t\t\t\t\t\t<p>{this.props.dog[0].temperament}</p>\n                    </div>\n                    <p>Bred For {this.props.dog[0].bred_for}</p>\n                    <p>Weight {this.props.dog[0].weight.imperial}</p>\n                    <img id=\"update-img\" src={this.props.dog[0].image.url} alt=\"breeds\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogComponent;","import React, { Component } from 'react';\nimport DogComponent from './DogComponent.js'\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: '',\n            oneDog: ''\n        }\n    }\n\n    getDog = (e, dogName) => {\n        const dogInput = dogName\n        const dog = this.props.dogs.filter(dog => {\n            return dog.name.toLowerCase() === dogInput.toLowerCase()\n        })\n        this.setState({ oneDog: dog })\n    }\n\n    handleBreed = (e) => {\n        this.setState({ value: e.target.value })\n    }\n\n    render() {\n        return (\n            <div>\n                <header className=\"header\">WELCOME TO THE COMPLETE GUIDE TO DOGS FROM AROUND THE WORLD!!!</header>\n\n                <button className=\"submit\" onClick={(e) => this.getDog(e, this.state.value)}>\n                    Click to get dog info\n\t\t\t\t</button>\n                <div className=\"search-container\">\n                    <input\n                        className=\"search\"\n                        type=\"text\"\n                        placeholder=\"search breed\"\n                        value={this.state.value}\n                        onChange={this.handleBreed}\n                    />\n                </div>\n                {this.state.oneDog.length !== 0 ? <DogComponent dog={this.state.oneDog} /> : null}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nexport default function AllDogs(props) {\n    const renderSomeDogs = props.dogs.map((dog) => (\n        <div className=\"render\">\n            <div>{dog.name}</div>\n            <p>{dog.life_span}</p>\n            <p>{dog.bred_for}</p>\n            <div>\n                <p> {dog.temperament}</p>\n            </div>\n            <p>{!dog.weight.imperial ? \"\" : dog.weight.imperial}</p>\n            <div>\n                <button onClick={() => props.deleteDog(dog)}>DELETE</button>\n                <button onClick={() => props.editDog(dog)}>\n            <Link to='/edit'>\n                EDIT\n            </Link>\n                </button>\n            </div>\n            <img id=\"update-img\" src={!dog.image.url ? \"\" : dog.image.url} alt=\"breeds\" />\n        </div>\n    ));\n    return (\n        <div>\n            <div>{renderSomeDogs}</div>\n        </div>\n    );\n}","import React, { Component } from 'react';\n\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dogToEdit: {\n                weight: {\n                    imperial: \"\"\n                },\n                image: {\n                    url: \"\"\n                }\n            },\n            newDog: {\n                weight: {\n                    imperial: \"\"\n                },\n                image: {\n                    url: \"\"\n                }\n            },\n            newDogs: []\n        };\n    }\n\n    createNewDog = (e) => {\n        e.preventDefault()\n        const newDog = this.state.newDog\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newDog)\n        }\n        fetch('https://dogs-api-info.herokuapp.com/dogs', requestOptions)\n            .then(res => res.json())\n            .then(returnedDogs => {\n                this.props.getAllDogs()\n            })\n    }\n\n\n\n\n    formChange = (e) => {\n\n        this.setState({\n            newDog: { ...this.state.newDog, [e.target.name]: e.target.value },\n        })\n    }\n\n    weightFormChange = (e) => {\n        if (e.target.name === \"weight\") {\n            this.setState({\n                newDog: {\n                    ...this.state.newDog,\n                    weight: {\n                        imperial: e.target.value\n                    },\n                }\n            })\n        }\n    }\n    imageFormChange = (e) => {\n        if (e.target.name === \"image\") {\n            this.setState({\n                newDog: {\n                    ...this.state.newDog,\n                    image: {\n                        url: e.target.value\n                    }\n                }\n            })\n        }\n    }\n\n\n    handleEditChange = (e) => {\n        this.setState({\n            dogToEdit: { ...this.state.dogToEdit, [e.target.name]: e.target.value }\n        })\n    }\n\n    weightEditChange = (e) => {\n        this.setState({\n            dogToEdit: {\n                ...this.state.dogToEdit,\n                weight: {\n                    imperial: e.target.value\n                },\n            }\n        })\n    }\n    imageEditChange = (e) => {\n        this.setState({\n            dogToEdit: {\n                ...this.state.dogToEdit,\n                image: {\n                    url: e.target.value\n                },\n\n            }\n        })\n    }\n    updateDog = async (e) => {\n        e.preventDefault()\n        const requestOptions = {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.dogToEdit)\n        }\n        const response = await fetch('https://dogs-api-info.herokuapp.com/dogs/' + String(this.props.dogToEdit._id), requestOptions)\n        const responseJson = await response.json()\n        if (responseJson) {\n            this.props.getAllDogs()\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.createNewDog}>\n                    <div className=\"form-container\">\n                        <div>\n                            <label for=\"breed\">Breed:</label>\n                            <input className=\"input\" name=\"breed\" value={this.state.newDog.breed} onChange={this.formChange} />\n                        </div>\n                        <div>\n                            <label for=\"life_span\">Life Span:</label>\n                            <input className=\"input2\" name=\"life_span\" value={this.state.newDog.life_span} onChange={this.formChange} />\n                        </div>\n                        <div>\n                            <label for=\"bred_for\">Bred For:</label>\n                            <input className=\"input3\" name=\"bred_for\" value={this.state.newDog.bred_for} onChange={this.formChange} />\n                        </div>\n                        <div>\n                            <label for=\"temperament\">Temperament:</label>\n                            <input className=\"input4\" name=\"temperament\" value={this.state.newDog.temperament} onChange={this.formChange} />\n                        </div>\n                        <div>\n                            <label for=\"weight\">Weight:</label>\n                            <input className=\"input5\" name=\"weight\" value={this.state.newDog.weight.imperial} onChange={this.weightFormChange} />\n                        </div>\n                        <div>\n                            <label for=\"image\">Image Url:</label>\n                            <input className=\"input6\" name=\"image\" value={this.state.newDog.image.url} onChange={this.imageFormChange} />\n                        </div>\n                        <div>\n                        </div>\n                        <div className=\"button\">\n                            <button className=\"update-dog\" type=\"submit\">Create Dog</button>\n                        </div>\n                    </div>\n                </form>\n                <div>\n                </div>\n                <div>\n                    <form className=\"form\" >\n                        <div className=\"form-container\">\n                            <div>\n                                <label for=\"name\">Breed:</label>\n                                <input className=\"input\" name=\"name\" value={this.state.dogToEdit.name} onChange={this.handleEditChange} />\n                            </div>\n                            <div>\n                                <label for=\"life_span\">Life Span:</label>\n                                <input className=\"input2\" name=\"life_span\" value={this.state.dogToEdit.life_span} onChange={this.handleEditChange} />\n                            </div>\n                            <div>\n                                <label for=\"bred_for\">Bred For:</label>\n                                <input className=\"input3\" name=\"bred_for\" value={this.state.dogToEdit.bred_for} onChange={this.handleEditChange} />\n                            </div>\n                            <div>\n                                <label for=\"temperament\">Temperament:</label>\n                                <input className=\"input4\" name=\"temperament\" value={this.state.dogToEdit.temperament} onChange={this.handleEditChange} />\n                            </div>\n                            <div>\n                                <label for=\"weight\">Weight:</label>\n                                <input className=\"input5\" name=\"weight\" value={this.state.dogToEdit.weight.imperial} onChange={this.weightEditChange} />\n                            </div>\n                            <div>\n                                <label for=\"image\">Image Url:</label>\n                                <input className=\"input5\" name=\"image\" value={this.state.dogToEdit.image.url} onChange={this.imageEditChange} />\n                            </div>\n                            <div>\n                            </div>\n                            <div className=\"button\">\n                                <button className=\"update-dog\" onClick={this.updateDog}>Edit Dog</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}","import { Component } from 'react';\nimport './App.css';\nimport './Dogcomponent.css';\nimport Nav from './Nav';\nimport Homepage from './Homepage';\nimport AllDogs from './AllDogs'\nimport Form from './Form'\nimport { Switch, Route, NavLink } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dogs: [],\n      Loading: true,\n      dogToEdit: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getAllDogs()\n  }\n\n  getAllDogs = async () => {\n    await fetch('https://dogs-api-info.herokuapp.com/dogs').then((response) => response.json()).then((data) => {\n      this.setState({\n        dogs: data,\n        Loading: false\n      });\n    });\n  }\n\n  deleteDog = (_id) => {\n    fetch('https://dogs-api-info.herokuapp.com/dogs/' + _id, { method: \"DELETE\" })\n      .then(() => this.getAllDogs())\n  }\n\n  editDog = (dogToEdit) => {\n    this.setState({ oneDog: dogToEdit })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        {/* We now call the Switch component from react-router-dom so that we can use this to switch between different components */}\n        <Switch>\n\n          <Route exact path=\"/home\">\n            <Homepage dogs={this.state.dogs} />\n          </Route>\n          <Route exact path='/alldogs'>\n            <AllDogs dogs={this.state.dogs} editDog={(dog) => dog !== undefined ? this.editDog(dog) : null} deleteDog={(dog) => dog !== undefined ? this.deleteDog(dog.id) : null} />\n          </Route>\n          <Route exact path='/edit'>\n            <Form dogToEdit={this.state.oneDog} getAllDogs={this.getAllDogs} deleteDog={(dog) => dog !== undefined ? this.deleteDog(dog.id) : null} />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}